// ASSIGNMENT-3 FROM UDEMY CLASS.

-- Creating a warehouse
CREATE WAREHOUSE EXERCISE_WH
WITH
WAREHOUSE_SIZE=XSMALL
MAX_CLUSTER_COUNT=3
MIN_CLUSTER_COUNT=1
AUTO_SUSPEND=600
AUTO_RESUME=TRUE
INITIALLY_SUSPENDED=TRUE
COMMENT= "This database is created in order to do udemy exercises and have some hands on experience on it."


-- Creating database
CREATE OR REPLACE DATABASE EXERCISE_DB;

-- Creating schema 
CREATE OR REPLACE SCHEMA SCHEMA_EXERCISE;

--Creating the table
CREATE OR REPLACE TABLE EXERCISE_DB.SCHEMA_EXERCISE.CUSTOMERS (
    ID INT,
    FIRST_NAME VARCHAR,
    LAST_NAME VARCHAR,
    EMAIL VARCHAR,
    AGE INT,
    CITY VARCHAR
);

--Creating the stage object to store s3 bucket.
CREATE OR REPLACE STAGE aws_s3bucket
    url="s3://snowflake-assignments-mc/loadingdata/";

-- Listing all the files present in the aws s3 bucket
LIST @aws_s3bucket;

--Copying the data from the aws stage into the customers table
COPY INTO EXERCISE_DB.SCHEMA_EXERCISE.CUSTOMERS  
    FROM @aws_s3bucket
    file_format = (type=csv 
                   field_delimiter=';' 
                   skip_header=1);

--Selecting the data from the table.
SELECT * FROM EXERCISE_DB.SCHEMA_EXERCISE.CUSTOMERS;

-----------------------------------------------------------------------------------------------------------
// Assignment-4 from udemy
CREATE OR REPLACE STAGE aws_2
url="s3://snowflake-assignments-mc/fileformat/";

-- Creating the file format object inside the database
CREATE OR REPLACE FILE FORMAT EXERCISE_DB.SCHEMA_EXERCISE.aws_file_format
type='CSV' field_delimiter='|' skip_header=1;

--Describing the file format object.
DESC FILE FORMAT EXERCISE_DB.SCHEMA_EXERCISE.aws_file_format;

-- Altering the file formate object but it cannot be alter.
ALTER FILE FORMAT EXERCISE_DB.SCHEMA_EXERCISE.aws_file_format 
SET type='csv' field_delimiter='|' skip_header=1;

--Listing the files present in the aws bucket
LIST @aws_2;

--Copying the data from the aws bucket to the table
COPY INTO EXERCISE_DB.SCHEMA_EXERCISE.CUSTOMERS
FROM @aws_2
file_format = (FORMAT_NAME=EXERCISE_DB.SCHEMA_EXERCISE.aws_file_format);

-----------------------------------------------------------------------------------------------------------
--Creating a table 
CREATE TABLE EXERCISE_DB.SCHEMA_EXERCISE.EMPLOYEES(
FIRST_NAME VARCHAR(50),
LAST_NAME VARCHAR(50),
EMAIL VARCHAR(50),
AGE INT,
DEPARTMENT VARCHAR(50)
);

--Creating the stage object
CREATE OR REPLACE STAGE EXERCISE_DB.SCHEMA_EXERCISE.aws_3
url = 's3://snowflake-assignments-mc/copyoptions/example1';

--Listing the files 
LIST @EXERCISE_DB.SCHEMA_EXERCISE.aws_3;

-- Creating the file format object 
CREATE OR REPLACE FILE FORMAT EXERCISE_DB.SCHEMA_EXERCISE.aws_file_format_2
type = 'CSV'
field_delimiter = ','
skip_header = 1;

-- Using copy into command to validate if there is any error in the file or not and if there is one then what is the error
COPY INTO EXERCISE_DB.SCHEMA_EXERCISE.EMPLOYEES
FROM @EXERCISE_DB.SCHEMA_EXERCISE.aws_3
FILE_FORMAT = (FORMAT_NAME= 'EXERCISE_DB.SCHEMA_EXERCISE.aws_file_format_2')
VALIDATION_MODE = RETURN_ERRORS;


-------------------------------------------------------------------------------------
                                --ASSIGNMENT-7
-------------------------------------------------------------------------------------

--Creating a stage to point to the specific url
CREATE OR REPLACE STAGE EXERCISE_DB.SCHEMA_EXERCISE.aws_4
url = 's3://snowflake-assignments-mc/unstructureddata/';

--Creating a file format object 
CREATE OR REPLACE FILE FORMAT EXERCISE_DB.SCHEMA_EXERCISE.aws_file_format_3
type='JSON';

--Creating a table with one coloumn
CREATE OR REPLACE TABlE EXERCISE_DB.SCHEMA_EXERCISE.JSON_RAW(
raw VARIANT
);

--Copying the raw data into the table
COPY INTO EXERCISE_DB.SCHEMA_EXERCISE.JSON_RAW 
FROM @EXERCISE_DB.SCHEMA_EXERCISE.aws_4
FILE_FORMAT = (FORMAT_NAME='EXERCISE_DB.SCHEMA_EXERCISE.aws_file_format_3');

--Selecting data from the tables
SELECT * FROM EXERCISE_DB.SCHEMA_EXERCISE.JSON_RAW;



-------------------------------------------------------------------------------------
                                --ASSIGNMENT-8
-------------------------------------------------------------------------------------

--Selecting  attributes first_name last_name skills and query these columns.
SELECT 
raw:first_name::STRING as firstName,
raw:last_name::STRING as LastName,
raw:Skills::STRING as SKILLS
FROM EXERCISE_DB.SCHEMA_EXERCISE.JSON_RAW;

--Selecting  attributes first_name last_name skills and query these columns.
SELECT 
raw:first_name::STRING as FIRSTNAME,
raw:last_name::STRING as LASTNAME,
raw:Skills[0]::STRING as SKILL_1,
raw:Skills[1]::STRING as SKILL_2
FROM EXERCISE_DB.SCHEMA_EXERCISE.JSON_RAW;

--Creating table and Inserting the values to it as mentioned above in SQL statement
CREATE OR REPLACE TABLE EXERCISE_DB.SCHEMA_EXERCISE.SKILLS
AS 
SELECT
raw:first_name::STRING as FIRSTNAME,
raw:last_name::STRING as LASTNAME,
raw:Skills[0]::STRING as SKILL_1,
raw:Skills[1]::STRING as SKILL_2
FROM EXERCISE_DB.SCHEMA_EXERCISE.JSON_RAW;

--Selecting values from the table 
SELECT * FROM EXERCISE_DB.SCHEMA_EXERCISE.SKILLS;

-----------------------------------------------------------------------------
--Assignment-9
--Loading data from the aws s3 bucket using storage integration object

CREATE OR REPLACE STORAGE INTEGRATION S3_INT
TYPE = EXTERNAL_STAGE
STORAGE_PROVIDER = S3
ENABLED = TRUE
STORAGE_AWS_ROLE_ARN = 'arn:aws:iam::364327004384:role/Snowflake-access-to-s3'
STORAGE_ALLOWED_LOCATIONS = ('s3://snowflake-testing-udemy/csv/netflix_titles.csv', 's3://snowflake-testing-udemy/json/Musical_Instruments_5.json')
COMMENT = 'This is the storage integration object created to get data from the s3 bucket using snowflake.';


--Describing the object in order to get ARN for the intergration object and put in aws role so that it recoganise the snowflake integration object.
DESC INTEGRATION S3_INT;


--Creating table movie title
CREATE OR REPLACE TABLE EXERCISE_DB.SCHEMA_EXERCISE.movie_titles(
show_id STRING,
type STRING,
title STRING,
director STRING,
cast STRING,
country STRING,
date_added STRING,
release_year STRING,
rating STRING,
duration STRING,
listed_in STRING,
description STRING);

--Creating file format object
CREATE OR REPLACE file format EXERCISE_DB.SCHEMA_EXERCISE.aws_private_file_format
type=CSV
field_delimiter = ','
skip_header = 1
null_if = ('NULL', 'null')
empty_field_as_null = TRUE
FIELD_OPTIONALLY_ENCLOSED_BY= '"';

--Creating stag object with integration object and file format object
CREATE OR REPLACE STAGE EXERCISE_DB.SCHEMA_EXERCISE.aws_private_s3
URL = 's3://snowflake-testing-udemy/csv/netflix_titles.csv'
STORAGE_INTEGRATION = s3_int
FILE_FORMAT = EXERCISE_DB.SCHEMA_EXERCISE.aws_private_file_format;

--Using COPY INTO Command to copy data into the snowflake.
COPY INTO EXERCISE_DB.SCHEMA_EXERCISE.movie_titles
FROM @EXERCISE_DB.SCHEMA_EXERCISE.aws_private_s3;

--Selecting all the items from the table
SELECT * FROM EXERCISE_DB.SCHEMA_EXERCISE.movie_titles;



select *
from table(information_schema.query_history_by_session())
order by start_time;
